// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tracker_bar_admin_api.DataModels;

#nullable disable

namespace tracker_bar_admin_api.Migrations
{
    [DbContext(typeof(UserAdminContext))]
    partial class UserAdminContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.AdminRestaurante", b =>
                {
                    b.Property<int>("AdminRestauranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminRestauranteId"), 1L, 1);

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AdminRestauranteId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("UserId");

                    b.ToTable("AdminRestaurante");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Direction", b =>
                {
                    b.Property<int>("DirectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectionId"), 1L, 1);

                    b.Property<string>("DirectionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectionId");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Phone", b =>
                {
                    b.Property<int>("PhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhoneId"), 1L, 1);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhoneId");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Receipt", b =>
                {
                    b.Property<int>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptId"), 1L, 1);

                    b.Property<int>("ReceiptDetailId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReceiptId");

                    b.HasIndex("ReceiptDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.ReceiptDetail", b =>
                {
                    b.Property<int>("ReceiptDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptDetailId"), 1L, 1);

                    b.Property<float>("Fees")
                        .HasColumnType("real");

                    b.Property<int>("PeopleQty")
                        .HasColumnType("int");

                    b.Property<float>("SubtotalPrice")
                        .HasColumnType("real");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("ReceiptDetailId");

                    b.ToTable("ReceiptDetail");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"), 1L, 1);

                    b.Property<int>("EmployeeQty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleQty")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableQty")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.RestaurantDirection", b =>
                {
                    b.Property<int>("RestaurantDirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Direction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantDirectionId");

                    b.ToTable("RestaurantDirection");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("RoleDescription")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.UserDirection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DirectionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDirection");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.UserPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PhoneId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhoneId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPhone");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.AdminRestaurante", b =>
                {
                    b.HasOne("tracker_bar_admin_api.DataModels.Restaurant", "Restaurant")
                        .WithMany("AdminRestaurantes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tracker_bar_admin_api.DataModels.User", "User")
                        .WithMany("AdminRestaurantes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Receipt", b =>
                {
                    b.HasOne("tracker_bar_admin_api.DataModels.ReceiptDetail", "ReceiptDetail")
                        .WithMany("Receipts")
                        .HasForeignKey("ReceiptDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tracker_bar_admin_api.DataModels.User", "User")
                        .WithMany("Receipts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.RestaurantDirection", b =>
                {
                    b.HasOne("tracker_bar_admin_api.DataModels.Restaurant", "Restaurant")
                        .WithOne("Direction")
                        .HasForeignKey("tracker_bar_admin_api.DataModels.RestaurantDirection", "RestaurantDirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Role", b =>
                {
                    b.HasOne("tracker_bar_admin_api.DataModels.User", "User")
                        .WithOne("Role")
                        .HasForeignKey("tracker_bar_admin_api.DataModels.Role", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.UserDirection", b =>
                {
                    b.HasOne("tracker_bar_admin_api.DataModels.Direction", "Direction")
                        .WithMany("UserDirections")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tracker_bar_admin_api.DataModels.User", "User")
                        .WithMany("Directions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.UserPhone", b =>
                {
                    b.HasOne("tracker_bar_admin_api.DataModels.Phone", "Phone")
                        .WithMany("UserPhones")
                        .HasForeignKey("PhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tracker_bar_admin_api.DataModels.User", "User")
                        .WithMany("Phones")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phone");

                    b.Navigation("User");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Direction", b =>
                {
                    b.Navigation("UserDirections");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Phone", b =>
                {
                    b.Navigation("UserPhones");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.ReceiptDetail", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.Restaurant", b =>
                {
                    b.Navigation("AdminRestaurantes");

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("tracker_bar_admin_api.DataModels.User", b =>
                {
                    b.Navigation("AdminRestaurantes");

                    b.Navigation("Directions");

                    b.Navigation("Phones");

                    b.Navigation("Receipts");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
